IntelliJ 다운로드
https://www.jetbrains.com/ko-kr/idea/download/?section=windows

객체지향 프로그래밍1
1. 객체와 객체 지향 프로그래밍
	- 객체란?
	- Object - 사물, 대상
	- 객체를 정의하는 속성, 상태
	- 객체가 하는 행위	: 함수(o)
	- 객체간 상호작용(협동, 의존...)
	
	개념적인 객체
		회원
		상품
		주문
	 
	자동차 - 객체
		- 속성 : 엔진, 연료.., 연료양, 속도계...
		- 행위 : 움직인다.
	
2. 클래스 살펴보기
	- 객체를 만들기 위한 설계도
	- 객체가 되면 있을 속성, 행위 정의
	
	1) 클래스를 정의하는 문법
		class 클래스명{
			변수 정의 : 멤버 변수 정의
			함수 정의 : 멤버 메서드 정의
		}
		
		new 연산자 : 객체를 만드는 연산
		
		마침표 연산자(.) : 객체 안에 변수, 메서드 접근 사용
		
		객체에서 생성된 자원 -> 힙 메모리 생성
		
	2) 클래스 이름을 짓는 규칙
		단어의 첫 글자가 모두 대문자 형태 - 파스칼 표기법
		
	3) 클래스의 속성을 구현하는 멤버변수
		- 변수 정의

3. 클래스와 인스턴스
	- 인스턴스(instance - 실체)
		- 실제로 존재한다(클래스 정의 -> 실제 메모리에 생성)
		
4. 메서드
	1) 함수란?
	- 하나의 기능을 수행하는 일련의 코드
	
	2) 함수 정의하기
		접근 제어자 반환값타입 함수명 (매개변수,...){
			// 수행할 코드..
		
		return 반환값
		}
		
		2x + 1 = y
		
		반환값타입이 없는 경우 void
		
	3) 함수 호출과 스택 메모리
		이름(값,...); -> 실행
		
		참고)
			변수 : 공간(메모리)의 이름
		
		연산에 필요한 메모리 : 스택 메모리에서 할당 : 실행될때
		
		참고)
			스택(Stack)자료구조 // 쌓아가는 구조
				- 마자막에 추가한 자료를 가장 먼저 꺼낼 수 있는 구조
				- 처음에 추가한 자료를 가장 마지막에 꺼낼 수 있는 구조
				
			큐(Queue)자료구조 
				- 처음에 추가한 자료를 처음에 꺼낼 수 있고
				- 마지막에 추가한 자료를 마지막에 꺼낼 수 있는 구조
				- 선착순, 대기줄
				
			스택 메모리
				- 함수 전용 메모리
				- 함수가 연산을 수행할 때만 필요한 메모리(임시 메모리)
				- 함수가 호출될 때만 정의된 변수에 공간을 할당
					- 함수가 실행될 때만 유효한 변수 : 지역 변수
	
5. 자바의 이름 짓기 규약
6. 클래스와 인스턴스
7. 프로그램을 시작하는 main()함수
8. new 예약어로 클래스 생성하기

9. 인스턴스와 참조 변수
	- 클래스 형 자료형 - 참조 변수
		- 객체의 주소값만 가지고 있다, 참조해서 실제 객체(힙 메모리)의 자원을 접근
		- 4byte 크기

10. 인스턴스와 힙 메모리
	인스턴스 - 생성된 객체
	힙메모리 - 객체 전용 메모리